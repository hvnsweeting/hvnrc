public class PE51
{
	public static void main(String[] args)
	{
		System.out.println("Test PE51");
		int[] a = {0, 0, 0, 0, 0, 0};
		int num;
		//Check 5 digits first: abcde => after check only found max family with 7 memb, try 6 digits
		//6 digits: abcdef
		//Only change 3 or 6 digits because it dont change remainer when divide by 3
		for(a[5] = 1; a[5] < 10; a[5] +=2)//f
			for(int h = 4; h > 0; h--) //h run from right
				for(int i = 0; i < h; i++) // i runs from left
					for(a[i] = 0; a[i] < 10; a[i]++) //a[i] & a[h] from 0 -> 9
						for(a[h] = 0; a[h] < 10; a[h]++)
						{
							int cntr = 0;
							for(int k = 0; k < 10; k++) //Value for 3 same number
							{
								for(int j = 0; j < 5; j++) //choose index number for 3 remaind digits
									if(j != i && j != h) a[j] =  k;
								num = arrayToInt(a);
								//System.out.println(num);
								if(isPrime(num) && Math.log10(num) > 4) cntr++; // remove number start with 0
								if(cntr >= 7) System.out.println(num +" " + cntr);//print all 7+ family to make sure program work well
							}
						}
	}


	private static int arrayToInt(int[] a)
	{
		int num = 0;
		for(int i = 0; i < a.length; i++)
		{
			num += a[i];
			num *= 10;
		}
		return num/10;
	}


	private static boolean isPrime(int x)
	{
		for(int i = 2; i <= Math.sqrt(x); i++)
			if(x % i == 0) return false;
		return true;
	}


}
/* @Solution
 * I relize that: when we want to check a number is prime or not with no tool, first: check last digit % 2 == 0 && % 5 == 0? Then test can it divide by 3 (caculate sum of all digits). 
 * When we replace n digits <=> we add n to sum of digits.
 * A number which replaced 3 or 6 digits will keep the remainder when divide by 3 (if change (increase) 2 digits will add to remainder 2. Remainder can be 1 -> (3) -> 5 -> 7 -> (9) -> 11 -> 13 -> (15) -> 17 -> 19 => max family can have when change 2 digits is 7 members (if start from 2, there are 7 member too -(6)(12)(18))
 * Try change 3 digits from 0 -> 9. Number has 5 digits: max family is 7
 * Try change 3 digits with number has 6 digits. Get smallest mem of 8-mem family is our answer
 *
 * @Exp:
 * Many problem work with number and change it's digits. So should notice that:
 * 1. Fast check prime by /2 /5 /3
 * 2. See when one thing change, what'll be changed make the result change.
 * 3. Create my our method to create all circumstance in 2Cn: let one number start from the right run to the left, and one number run from left to right, stop when it's beside the other one (nested loop)
*/ 
//VOTE 3* PE51
//Solved by FamiHug on 26-06-2011
//Answer is (929393) => a2b3c3 => 121313
