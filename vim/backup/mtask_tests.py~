import os
import mtask
import unittest
import tempfile

class MTaskTestCase(unittest.TestCase):

	def setUp(self):
		self.db_fd, mtask.app.config['DATABASE'] = tempfile.mkstemp()
		mtask.app.config['TESTTING'] = True
		self.app = mtask.app.test_client()
		mtask.init_db()

	def tearDown(self):
		os.close(self.db_fd)
		os.unlink(mtask.app.config['DATABASE'])

	def test_empty_db(self):
		rv = self.app.get('/')
		assert 'Unblieveable, no task here so far' in rv.data

	def login(self, username, password):
		return self.app.post('/login', data=dict(
			username=username,
			password=password
			), follow_redirects=True)

	def logout(self):
		return self.app.get('/logout', follow_redirects=True)

	def test_login_logout(self):
		rv = self.login('root', 'hehehe')
		assert 'You were logged in' in rv.data

		rv = self.login('root', 'lsjfsldk')
		assert 'Invalid passwrd' in rv.data

	def test_messages(self):
		rv = self.login('root', 'hehehe')
		assert 'You were logged in' in rv.data

		rv = self.app.post('/add', data=dict(
			task='hello',
			startdate='23-12-2011',
			enddate='23-12-2012',
			priority=4
			), follow_redirects=True )

		assert 'Unblieveable, no task here so far' not in rv.data
	
	app = mtask.Flask(__name__)

	with app.test_request_context('/?name=HVN'):
		assert flask.request.path == '/'
 
if __name__ == '__main__':
	unittest.main()
