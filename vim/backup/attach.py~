import mimetypes
import os, sys
from email import encoders
from email.message import Message
from email.mime.audio import MIMEAudio
from email.mime.base import MIMEBase
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

def attachfile(path, filename):
	
	# Guess the content type based on the file's extension.  Encoding
	# will be ignored, although we should check for simple things like
	# gzip'd or compressed files.
	ctype, encoding = mimetypes.guess_type(path)
	if ctype is None or encoding is not None:
	    # No guess could be made, or the file is encoded (compressed), so
	    # use a generic bag-of-bits type.
	    ctype = 'application/octet-stream'
	maintype, subtype = ctype.split('/', 1)
	if maintype == 'text':
	    fp = open(path)
	    # Note: we should handle calculating the charset
	    msg = MIMEText(fp.read(), _subtype=subtype)
	    fp.close()
	elif maintype == 'image':
	    fp = open(path, 'rb')
	    msg = MIMEImage(fp.read(), _subtype=subtype)
	    fp.close()
	elif maintype == 'audio':
	    fp = open(path, 'rb')
	    msg = MIMEAudio(fp.read(), _subtype=subtype)
	    fp.close()
	else:
	    fp = open(path, 'rb')
	    msg = MIMEBase(maintype, subtype)
	    msg.set_payload(fp.read())
	    fp.close()
	    # Encode the payload using Base64
	    encoders.encode_base64(msg)
	# Set the filename parameter
	msg.add_header('Content-Disposition', 'attachment', filename=filename)
	print 'lau la o day'
	return msg
	# Now send or store the message
