(defun fun-name (arg1 args) (body))
(list :key var :key2 var2)
(getf (list :key var :key2 var2) :key2)
(dolist (cd *db*) (format t cd)) ;foreach each cd in db
(defvar *db* nil) ;*db* global var
(push cd *db*) ; push return var after it modifying (add)
(format t "~{~a:~10t~a~%~}~%" cd) ; t arg stand for standard-output, ~a stand for aesthetic "remove quotation marks, colon", ~t stand for tabulating, ~% for newline, inside ~{ ~} is a list
(loop (expression) (if ...) (return))
(load "filename.lisp")
(load (compile-file("filename.lisp")))
(force-ouput *query-io*) ;ensure Lisp doesn't wait for a newline before it print the prompt, *query-io* contains the input stream connected to the terminal
(read-line *query-io*); read a single line of text
;return value of a function is the value of the last form
(or (parse-integer (prompt-read "Rating") :junk-allowed t) 0)
(y-or-n-p "Something prompt: ?")

