from PyQt4 import QtCore
import os
from basethread import BaseThread

LINUX = 0
WINDOWS = 1

if os.name == 'posix':
    import pexpect
    OSTYPE = LINUX
elif os.name == 'nt':
    import subprocess
    OSTYPE = WINDOWS

class PingThread(BaseThread):

    def run(self):
        all_res = ""
        separator =  "*" * 50
        for netloc in self.netlocs:
            logging.info("pinging %s " % netloc)
            res = "*****Ping result for %s :*****\n" % netloc

            child = pexpect.spawn('ping -i 0.3 -W 2 -c 5 '+netloc)
            while 1:
                line = child.readline()
                if not line: break
                res += line.strip() + "\n"
            all_res += res + "\n"

        all_res += "\n" + separator
        self.emit(QtCore.SIGNAL("Data"), all_res)


class TracePathThread(BaseThread):
    
    def run(self):
        all_res = ""
        separator =  "*" * 50
        for netloc in self.netlocs:
            logging.info("tracing %s " % netloc)
            res = "*****Traceroute result for %s :*****\n" % netloc
            child = pexpect.spawn('tracepath -n '+netloc)
            noreply = 0
            count = 0
            while 1:
                line = child.readline() 
                if not line: break 
                res += line.strip() + "\n"
                count += 1
                if "no reply" in line:
                    noreply += 1
                else: noreply = 0 # reset counting
                if (noreply >= 5 and count > 15) or (noreply >= 7 and count > 10): break 
                # 5 lan 'no reply' lien tiep & line_number > 15 thi` break!
            all_res += res

        all_res += "\n" + separator
        self.emit(QtCore.SIGNAL("TraceData"), all_res)


if __name__ == "__main__":
    #TODO write something here
    #QThread not run if has no QApplication, create a dummy here?
    pass



