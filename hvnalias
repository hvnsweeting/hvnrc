# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias troi='while read i; do echo $i; sleep 0.5; done <'

# frequent
alias psg='ps aux | grep '
alias irc='irssi -c irc.freenode.net'
alias lstd='cat ~/.TODO.rst'
alias vitd='vim ~/.TODO.rst'
alias myip='dig +short myip.opendns.com @208.67.222.222'

function tgrep () {
  GREP=$1
  FILETYPE=$2
  find . -name "*.$FILETYPE" | xargs grep -Rn "${GREP}"
}

function tgrepl () {
  GREP=$1
  FILETYPE=$2
  find . -name "*.$FILETYPE" | xargs grep -l "${GREP}"
}

function grepsalt() {
    grep -v -E ' Missing key|salt.loader \(loader\.gen_functions|OrderedDict|Executing state|salt\.loaded\.int\.render\.yaml|Completed state' "$1" | less -N
}

alias py2='source ~/python2/bin/activate'
alias ipy='. ~/python2/bin/activate; cd ~/python2/code; ipython'

SCROOT="~/Github/bfs/common"

# cds
alias cdd="cd ~/Dropbox"
alias cdp="cd ~/python2"
alias cdg="cd ~/Github"
alias cdcm="cd $SCROOT"
alias cdrc='cd ~/Github/me/hvnrc'
alias cdf='cd ~/Github/FOSS'
alias cdfs='cd ~/Github/FOSS/salt'

# golang workspace
export GOPATH=~/Github/gomeo
if [ ! -d "$GOPATH/src" ]; then
  mkdir -p "$GOPATH/src" "$GOPATH/pkg" "$GOPATH/bin"
fi
export PATH=$PATH:$GOPATH/bin

# connection checking
alias cck='ping -c2 -W1 203.162.71.66 || ping -c1 -W1 8.8.8.8 || ping -c1 -W1 208.67.222.222 || echo "NO CONNECTION"'

# PyTimesheet
alias pts='/Users/hvn/Github/pytimesheet/pts.py'

# ssh
alias sshr='ssh-keygen -R'
function sshroot () {
    ssh -v root@$1
}

# GIT
alias gtus='git status'
alias gcm='git commit -m '
alias gcam='git commit -am '
alias gco='git checkout'
alias gdi='git diff'
alias gdev='git checkout develop && git merge origin/develop'
alias gfap='git fetch --all -p --tags'
alias gpo='git push origin $(git symbolic-ref --short HEAD)'
alias gdep='git fetch --all; git checkout testing && git reset --hard origin/testing && git merge origin/develop && git push origin testing'
# git latest branches
alias glb='git for-each-ref --sort=-committerdate refs/heads/ | head'
# list of files changed in latest commit
alias glast='git diff-tree --name-only -r --no-commit-id HEAD'

gfa () {
    current=`pwd`
    if [ -z $1 ]; then
        dest=/home/hvn/Github/bfs/*/
    else
        dest=$1
    fi
    for n in `find $dest -name '.git' -type d `;
    do
        dir=$(echo $n | grep -Eo '.*/')
        cd $dir
        echo "fetching in $(pwd)"
        git fetch origin -p
    done
    cd $current
}

# Saltstack
alias scdoc="cd $SCROOT; py2; time ./doc/build.py"

# common developer tools
# find the most common used Python vars
function pyvars () {
    find $1 -name '*.py' | xargs grep ' = ' | cut -f1 -d'=' | tr -d ' ' | cut -f2 -d':' | sort -nr | uniq -c| sort -nr| head -n30
}

# dangerous alias like for shutting down computer
if [ -f ~/.ugly_aliases ]; then
    . ~/.ugly_aliases
fi

alias nrpe='~/Github/tinyscripts/salt/nrpe2mon.py'

# Auto deploy salt for test
deps () {
    saltcommon=$1
    address=$2
    SLSes=$3
    salt_common=`pwd`
    non_common=${4:-$salt_common}

    if [ ! -e 'nrpe/init.sls' ]; then
        echo "$salt_common"
        echo "It does not look like root salt-common dir. Exit? [y/n]"
        read _cm
        if [ ${_cm} = 'y' ]; then
            return
        fi
    fi

    cd $saltcommon/..
    parent=`pwd`

    cd $parent/pillars
    if [ "$(git rev-parse --abbrev-ref HEAD)" == "develop" ]; then
        echo -n "Pillar is in branch develop, continue? [y/n]:"
        read _answ
        if [ ${_answ} != "y" ]; then
            cd $salt_common
            return
        fi
    fi

    cd $salt_common
    # TODO verify is a salt-common repo
    tarball=/tmp/salt_`date +%Y%m%d_%H%M%S`.tar.gz
    logfile=/var/log/salt/`date +%Y%m%d_%H%M%S_$SLSes.log`
    errorfile=$logfile$$
    set -x
    $saltcommon/bootstrap_archive.py $parent/pillars $non_common > $tarball
    set +x
    tar tzf $tarball 2>&1 > /dev/null || { echo "bad tarball" && return ; }

    set -x
    if [ ! -z $address ]; then
        if ! `scp -v $tarball root@$address:/tmp`; then
            ssh-keygen -f ~/.ssh/known_hosts -R $address
            scp -v -oStrictHostKeyChecking=no $tarball root@$address:/tmp
        fi

        ssh -oSendEnv=no -oStrictHostKeyChecking=no root@$address << EOF_
        ntpdate ntp.ubuntu.com
EOF_

        # run the salt-call
        ssh -oSendEnv=no -oStrictHostKeyChecking=no root@$address << EOF
        cd /; rm -rf /root/salt; tar xzf $tarball;
        pgrep salt-minion || /root/salt/states/salt/minion/bootstrap.sh "salt-hvn-dev"
        echo "log_level: info" > /etc/salt/minion.d/log.conf
        echo "file_log_level: debug" >> /etc/salt/minion.d/log.conf
        service salt-minion restart
        cd /root/salt;
        rm -rf /var/cache/salt/minion/doc
		echo "$SLSes" >> $logfile
        salt-call -c /root/salt/states/test saltutil.sync_all -linfo
        salt-call -c /root/salt/states/test state.sls $SLSes 2>$errorfile >> $logfile
        echo "============== ERROR LOG ==============" >> $logfile
        cat $errorfile >> $logfile
        rm -f $errorfile
        echo "\nDONE AT `date`" >> $logfile
EOF
    test -e ~/salt_deploy || mkdir ~/salt_deploy
    scp -v root@$address:$logfile ~/salt_deploy
    vim +/'Result: *False' ~/salt_deploy/`basename $logfile`
    fi
    set +x
}

pilocal='cd ~/Github/bfs/pillars/; git checkout integration.sls; patch integration.sls patchlocal;cd -'

ldir () {
# get list of changed formulas in comparing to $1 branch
    git diff $1 --stat | grep -v insertions | cut -d'/' -f1 | uniq | xargs
}

mirror () {
    url=$1
    if [ -z $2 ]; then
        expected_fn=$(basename $1)
    else
        expected_fn=$2
    fi
    if [ ! -e $url ]; then
        # it's a url
        fn=$expected_fn
        set -x
        python2 -c "import urllib; print urllib.urlretrieve('"$url"', '"$fn"')"
        set +x
    else
        fn=$url
    fi

    echo -n 'server: '; read server
    echo -n 'dir: '; read destdir
    scp -v -P22022 $fn salt_archive@${server}:incoming/${destdir}/$expected_fn
    rm -i $fn
}

saltrender () {
    py2
    salt-call --local -c /Users/hvn/Github/FOSS/salt/conf/local  cp.get_template salt://$1 /tmp/salt_render && less /tmp/salt_render
    rm -f /tmp/salt_render
}

startday() {
    echo "Adding ssh key"
    pwd=$(pwd)
    if (! ssh-add -l); then
        ssh-add
    fi

    echo "creating SSH tunnel if needed"
    ~/hbin/sshtunnel.sh
    ps auxww | grep 'ssh.*[D] 123'

    for repo in common pillars; do
        echo "fetching important repo ${repo}"
        cd ~/Github/bfs/${repo}
        git fetch --all --prune
    done
    cd $pwd
    echo "Good day, me!"
}

alias dockersalt='docker run -v ~/Github/bfs/common/:/root/salt/states -v ~/Github/bfs/pillars/:/root/salt/pillar -it hvn:salt  tmux'
